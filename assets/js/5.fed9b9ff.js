(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{338:function(t,e,a){t.exports=a.p+"assets/img/report.74fa047f.jpg"},339:function(t,e,a){t.exports=a.p+"assets/img/cloc.1e69fa2f.jpg"},340:function(t,e,a){t.exports=a.p+"assets/img/dist-small.7326ecf3.jpg"},341:function(t,e,a){t.exports=a.p+"assets/img/dist.193bee67.jpg"},342:function(t,e,a){t.exports=a.p+"assets/img/nginx-config.5d0e66d7.jpg"},343:function(t,e,a){t.exports=a.p+"assets/img/before-gzip.98470d85.jpg"},344:function(t,e,a){t.exports=a.p+"assets/img/after-gzip.5db603db.jpg"},345:function(t,e,a){t.exports=a.p+"assets/img/check-nginx-config.10ef0bbd.jpg"},402:function(t,e,a){"use strict";a.r(e);var s=a(8),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h3",{attrs:{id:"本地环境打包预览"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#本地环境打包预览"}},[t._v("#")]),t._v(" 本地环境打包预览")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("pnpm preview:build\n")])])]),s("h3",{attrs:{id:"预发布打包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#预发布打包"}},[t._v("#")]),t._v(" 预发布打包")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/ronnaces/ronna-screen/blob/main/.env.staging",target:"_blank",rel:"noopener noreferrer"}},[t._v(".env.staging"),s("OutboundLink")],1),t._v(" 文件为预发布打包前的配置文件，"),s("a",{attrs:{href:"https://cn.vitejs.dev/guide/env-and-mode.html#modes",target:"_blank",rel:"noopener noreferrer"}},[t._v("预发布"),s("OutboundLink")],1),t._v(" "),s("Badge",{attrs:{text:"vite文档"}})],1),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("pnpm build:staging\n")])])]),s("h3",{attrs:{id:"正式环境打包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#正式环境打包"}},[t._v("#")]),t._v(" 正式环境打包")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/ronnaces/ronna-screen/blob/main/.env.production",target:"_blank",rel:"noopener noreferrer"}},[t._v(".env.production"),s("OutboundLink")],1),t._v(" 文件为正式环境打包前的配置文件")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("pnpm build\n")])])]),s("h3",{attrs:{id:"打包分析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#打包分析"}},[t._v("#")]),t._v(" 打包分析")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("pnpm report\n")])])]),s("p",[s("img",{attrs:{src:a(338),alt:"report"}})]),t._v(" "),s("h3",{attrs:{id:"平台文件、语言分析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#平台文件、语言分析"}},[t._v("#")]),t._v(" 平台文件、语言分析")]),t._v(" "),s("p",[t._v("分析平台采用了哪些语言以及代码量")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("pnpm cloc\n")])])]),s("p",[s("img",{attrs:{src:a(339),alt:"image-cloc"}})]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("打包优化")]),t._v(" "),s("p",[t._v("点击查看更多 "),s("RouterLink",{attrs:{to:"/pages/buildgood/"}},[t._v("打包优化")])],1)]),t._v(" "),s("h2",{attrs:{id:"部署"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#部署"}},[t._v("#")]),t._v(" 部署")]),t._v(" "),s("h3",{attrs:{id:"nginx"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nginx"}},[t._v("#")]),t._v(" "),s("code",[t._v("nginx")])]),t._v(" "),s("p",[t._v("在 "),s("RouterLink",{attrs:{to:"/pages/request/#什么是跨域"}},[t._v("http 请求篇")]),t._v("，平台主推使用 "),s("code",[t._v("nginx")]),t._v(" 部署，因为可以满足绝大多数场景，下面我们讲一下如何配置")],1),t._v(" "),s("h4",{attrs:{id:"打包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#打包"}},[t._v("#")]),t._v(" 打包")]),t._v(" "),s("p",[t._v("平台提供了全局打包路径 "),s("a",{attrs:{href:"https://github.com/ronnaces/ronna-screen/blob/main/.env.production#L2",target:"_blank",rel:"noopener noreferrer"}},[t._v("VITE_PUBLIC_PATH"),s("OutboundLink")],1),t._v(" ，默认 "),s("code",[t._v("/")]),t._v("，可根据需求自行修改。比如平台的预览地址是 "),s("code",[t._v("https://github.com/ronnaces/ronna-screen/#/login")]),t._v("，可以看到根目录 "),s("code",[t._v("https://github.com/ronnaces")]),t._v(" 后面又跟了个 "),s("code",[t._v("/ronna-screen/")]),t._v(" 子目录，那么我们打包时就应该把 "),s("code",[t._v("VITE_PUBLIC_PATH")]),t._v(" 改成 "),s("code",[t._v("/ronna-screen/")]),t._v("，然后执行 "),s("code",[t._v("pnpm build")]),t._v(" 就行，打包完后观察平台根目录会多出个 "),s("code",[t._v("dist")]),t._v(" 目录，如下图")]),t._v(" "),s("p",[s("img",{attrs:{src:a(340),alt:"dist-small"}})]),t._v(" "),s("h4",{attrs:{id:"nginx-配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nginx-配置"}},[t._v("#")]),t._v(" "),s("code",[t._v("nginx")]),t._v(" 配置")]),t._v(" "),s("p",[t._v("拿 "),s("code",[t._v("mac")]),t._v(" 举例，配置都一样，可能您们对应的目录不一样，根据实际情况修改即可")]),t._v(" "),s("p",[t._v("① 上面打包好后，来到 "),s("code",[t._v("/usr/local/var/www")]),t._v(" 目录下，将打包后 "),s("code",[t._v("dist")]),t._v(" 文件里的静态资源都放进去即可，如下图")]),t._v(" "),s("p",[s("img",{attrs:{src:a(341),alt:"dist"}})]),t._v(" "),s("p",[t._v("② 比如我们在 "),s("code",[t._v("vite.config.ts")]),t._v(" 配置了两个后端地址，如下")]),t._v(" "),s("div",{staticClass:"language-ts extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ts"}},[s("code",[t._v("proxy"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 第一个代理后端地址")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v('"/api"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    target"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://127.0.0.1:3000"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    changeOrigin"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("rewrite")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" path "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" path"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^\\/api")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 第二个代理后端地址")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v('"/otherApi"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    target"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://127.0.0.1:3290"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    changeOrigin"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("rewrite")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" path "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" path"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^\\/otherApi")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("来到 "),s("code",[t._v("/usr/local/etc/nginx/nginx.conf")]),t._v(" 这个 "),s("code",[t._v("nginx")]),t._v(" 的配置文件，修改成如下配置即可")]),t._v(" "),s("p",[t._v("nginx.config")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("location / {\n    root   html;\n    index  index.html index.htm;\n    # 用于配合前端路由为h5模式使用，防止刷新404 https://router.vuejs.org/zh/guide/essentials/history-mode.html#nginx\n    try_files $uri $uri/ /index.html;\n}\n\n# 第一个代理后端地址（vite.config.ts里叫 /api，这里也要保持一致）\nlocation /api {\n    # 如果后端在本地比如127.0.0.1或者localhost请解开下面的rewrite注释即可\n    # rewrite  ^.+api/?(.*)$ /$1 break;\n    # 这里填写后端地址（后面一定不要忘记添加 / ）\n    proxy_pass http://127.0.0.1:3000/;\n    proxy_set_header Host $host;\n    proxy_set_header Cookie $http_cookie;\n    proxy_set_header X-Real-IP $remote_addr;\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    proxy_redirect default;\n    add_header Access-Control-Allow-Origin *;\n    add_header Access-Control-Allow-Headers X-Requested-With;\n    add_header Access-Control-Allow-Methods GET,POST,OPTIONS;\n}\n\n# 第二个代理后端地址（vite.config.ts里叫 /otherApi，这里也要保持一致）\nlocation /otherApi {\n    # 如果后端在本地比如127.0.0.1或者localhost请解开下面的rewrite注释即可\n    # rewrite  ^.+otherApi/?(.*)$ /$1 break;\n    # 这里填写后端地址（后面一定不要忘记添加 / ）\n    proxy_pass http://127.0.0.1:3290/;\n    proxy_set_header Host $host;\n    proxy_set_header Cookie $http_cookie;\n    proxy_set_header X-Real-IP $remote_addr;\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    proxy_redirect default;\n    add_header Access-Control-Allow-Origin *;\n    add_header Access-Control-Allow-Headers X-Requested-With;\n    add_header Access-Control-Allow-Methods GET,POST,OPTIONS;\n}\n")])])]),s("p",[t._v("将上面的配置放到 "),s("code",[t._v("server")]),t._v(" 里，如下图")]),t._v(" "),s("p",[s("img",{attrs:{src:a(342),alt:"nginx-config"}})]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("上面的配置是平台的 VITE_PUBLIC_PATH = / 情况，也就是只有跟目录的情况。下面的配置为有子目录情况，比如子目录叫 `ronna-screen`")]),t._v(" "),s("p",[t._v("① 来到 "),s("a",{attrs:{href:"https://github.com/ronnaces/ronna-screen/blob/main/.env.production#L2",target:"_blank",rel:"noopener noreferrer"}},[t._v(".env.production"),s("OutboundLink")],1),t._v("，将 "),s("code",[t._v("VITE_PUBLIC_PATH")]),t._v(" 等于 "),s("code",[t._v("/ronna-screen")]),t._v("，如下")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("# 线上环境平台打包路径\nVITE_PUBLIC_PATH = /ronna-screen/\n")])])]),s("p",[t._v("② 配置 "),s("code",[t._v("nginx.config")]),t._v(" 如下，可以看到多了个 "),s("code",[t._v("location /ronna-screen/")]),t._v(" 配置")]),t._v(" "),s("p",[t._v("nginx.config")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("点击查看")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("location / {\n    root   html;\n    index  index.html index.htm;\n    try_files $uri $uri/ /index.html;\n}\n\nlocation /ronna-screen/ {\n    root   html;\n    index  index.html index.htm;\n    try_files $uri $uri/ /ronna-screen/index.html;\n}\n\nlocation /api {\n    # 如果后端在本地比如127.0.0.1或者localhost请解开下面的rewrite注释即可\n    # rewrite  ^.+api/?(.*)$ /$1 break;\n    # 这里填写后端地址（后面一定不要忘记添加 / ）\n    proxy_pass http://127.0.0.1:3000/;\n    proxy_set_header Host $host;\n    proxy_set_header Cookie $http_cookie;\n    proxy_set_header X-Real-IP $remote_addr;\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    proxy_redirect default;\n    add_header Access-Control-Allow-Origin *;\n    add_header Access-Control-Allow-Headers X-Requested-With;\n    add_header Access-Control-Allow-Methods GET,POST,OPTIONS;\n}\n\nlocation /otherApi {\n    # 如果后端在本地比如127.0.0.1或者localhost请解开下面的rewrite注释即可\n    # rewrite  ^.+otherApi/?(.*)$ /$1 break;\n    # 这里填写后端地址（后面一定不要忘记添加 / ）\n    proxy_pass http://127.0.0.1:3290/;\n    proxy_set_header Host $host;\n    proxy_set_header Cookie $http_cookie;\n    proxy_set_header X-Real-IP $remote_addr;\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    proxy_redirect default;\n    add_header Access-Control-Allow-Origin *;\n    add_header Access-Control-Allow-Headers X-Requested-With;\n    add_header Access-Control-Allow-Methods GET,POST,OPTIONS;\n}\n")])])])])]),t._v(" "),s("h4",{attrs:{id:"开启-gzip、brotli-压缩"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#开启-gzip、brotli-压缩"}},[t._v("#")]),t._v(" 开启 "),s("code",[t._v("gzip")]),t._v("、"),s("code",[t._v("brotli")]),t._v(" 压缩")]),t._v(" "),s("p",[t._v("① 来到 "),s("a",{attrs:{href:"https://github.com/ronnaces/ronna-screen/blob/main/.env.production#L16",target:"_blank",rel:"noopener noreferrer"}},[t._v(".env.production"),s("OutboundLink")],1),t._v("，将 "),s("code",[t._v("VITE_COMPRESSION")]),t._v(" 等于 "),s("code",[t._v("both")]),t._v("，如下")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('# 同时开启 gzip 与 brotli 压缩\nVITE_COMPRESSION = "both"\n')])])]),s("p",[t._v("② 配置 "),s("code",[t._v("nginx.config")]),t._v(" 如下")]),t._v(" "),s("p",[t._v("nginx.config")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('http {\n  # 开启gzip\n  gzip on;\n  # https://blog.csdn.net/fxss5201/article/details/106535475\n  gzip_static on;\n  gzip_proxied any;\n  # 低于1kb的资源不压缩\n  gzip_min_length 1k;\n  gzip_buffers 4 16k;\n  gzip_comp_level 2;\n  # 需要压缩的类型\n  gzip_types text/plain application/javascript application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png;\n  # 配置禁用gzip条件，支持正则。此处表示ie6及以下不启用gzip（因为ie低版本不支持）\n  gzip_disable "MSIE [1-6]\\.";\n  # 是否添加“Vary: Accept-Encoding”响应头\n  gzip_vary off;\n\n  # 开启brotli压缩，与gzip共存不会冲突，nginx默认不支持ngx_brotli模块，需要自行编译，参考 https://cloud.tencent.com/developer/article/2071894\n  brotli on;\n  brotli_comp_level 6;\n  brotli_buffers 16 8k;\n  brotli_min_length 20;\n  brotli_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript image/svg+xml;\n}\n')])])]),s("p",[t._v("下面两张图是平台非国际化精简版开启 "),s("code",[t._v("gzip")]),t._v(" 前后对比")]),t._v(" "),s("p",[t._v("未开启 "),s("code",[t._v("gzip")]),t._v("（资源大小 "),s("code",[t._v("2.6MB")]),t._v("）")]),t._v(" "),s("p",[s("img",{attrs:{src:a(343),alt:"before-gzip"}})]),t._v(" "),s("p",[t._v("开启 "),s("code",[t._v("gzip")]),t._v("（资源被压缩，大小 "),s("code",[t._v("684kb")]),t._v("，比未开启时少了约 "),s("code",[t._v("2MB")]),t._v(" 🐮）")]),t._v(" "),s("p",[s("img",{attrs:{src:a(344),alt:"after-gzip"}})]),t._v(" "),s("h4",{attrs:{id:"nginx-常用命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nginx-常用命令"}},[t._v("#")]),t._v(" "),s("code",[t._v("nginx")]),t._v(" 常用命令")]),t._v(" "),s("h5",{attrs:{id:"启动-nginx"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#启动-nginx"}},[t._v("#")]),t._v(" 启动 "),s("code",[t._v("nginx")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("sudo nginx\n")])])]),s("h5",{attrs:{id:"重启-nginx"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#重启-nginx"}},[t._v("#")]),t._v(" 重启 "),s("code",[t._v("nginx")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("sudo nginx -s reload\n")])])]),s("h5",{attrs:{id:"停止运行-nginx"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#停止运行-nginx"}},[t._v("#")]),t._v(" 停止运行 "),s("code",[t._v("nginx")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("sudo nginx -s stop\n")])])]),s("h5",{attrs:{id:"判断-nginx-config-配置文件语法是否正确"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#判断-nginx-config-配置文件语法是否正确"}},[t._v("#")]),t._v(" 判断 "),s("code",[t._v("nginx.config")]),t._v(" 配置文件语法是否正确")]),t._v(" "),s("p",[t._v("常用于当您配置 "),s("code",[t._v("nginx.config")]),t._v(" 文件保存重启后却不生效时")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("sudo nginx -t\n")])])]),s("p",[t._v("当出现 "),s("code",[t._v("ok")]),t._v("、"),s("code",[t._v("successful")]),t._v(" 的字眼时说明配置文件语法没问题")]),t._v(" "),s("p",[s("img",{attrs:{src:a(345),alt:"check-nginx-config"}})])])}),[],!1,null,null,null);e.default=n.exports}}]);